/*========================================
	■■■ 정렬(sort) 알고리즘 ■■■
	-- 선택 정렬(Selection Sort)
=========================================*/

/*
○ 정렬 
   : 데이터를 특정한 규칙(기준)에 맞게 순서대로 나열(오름차순, 내림차순)
 
○ 정렬의 목적
   : 데이터 처리 과정의 편의성이나 가독성을 높이기 위함
     → 보기 좋게.. 검색하기 위함

○ 정렬의 종류
   : 선택 정렬, 버블 정렬, 삽입 정렬, 힙 정렬, 퀵 정렬, 쉘 정렬, ...
*/

  
public class Test102
{
	public static void main(String[] args)
	{
		// ○ 팀에서 푼 내용
		/*
		int[] a = {52, 42, 12, 62, 60};
		
		for (int i=0; i<(a.length-1); i++)
		{
			for (int j=i+1; j<a.length; j++)
			{
				if (a[i]>a[j])
				{
					a[i] = a[i]^a[j];
					a[j] = a[j]^a[i];
					a[i] = a[i]^a[j];
				}
			}
		}

		for (int i=0; i<a.length; i++)
		{
			System.out.printf("%4d", a[i]);
		}
		System.out.println();
		*/

		// ○ 함께 풀이한 내용
		int[] a = {52, 42, 12, 62, 60};

		int i, j;

		System.out.print("Source Data : ");

		/*
		for (i=0; i<a.length; i++)
		{
			System.out.print(a[i] + " ");
		}
		System.out.println();
		*/

		// 향상된 for문 → forEach 구문
		for (int n : a)  // a(배열 or 자료구조) -> 데이터 타입 -> n지정
			System.out.print( n + " ");
		System.out.println();
		//--==>> Source Data : 52 42 12 62 60


		/*
		52, 42, 12, 62, 60		→ 0번째	1번째 비교
		======

		42, 52, 12, 62, 60		→ 0번째	2번째 비교
		===     ===

		12, 52, 42, 62, 60      → 0번째	3번째 비교
		===        ===

		12, 52, 42, 62, 60      → 0번째	4번째 비교
		===            ===

		---------------------------------------------- 1회전
		
		12, 52, 42, 62, 60      → 1번째	2번째 비교
		    ======
        
		12, 42, 52, 62, 60      → 1번째	3번째 비교
		    ==      ==

		12, 42, 52, 62, 60      → 1번째	4번째 비교
		    ==          ==
		
		---------------------------------------------- 2회전

        12, 42, 52, 62, 60      → 2번째	3번째 비교
      		    ==  ==

		12, 42, 52, 62, 60      → 2번째	4번째 비교
      		    ==      ==
		---------------------------------------------- 3회전

		12, 42, 52, 60, 62      → 3번째	4번째 비교
      		        ======
		---------------------------------------------- 4회전
		*/


	}
}